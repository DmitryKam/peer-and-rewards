{"version":3,"sources":["store/types.ts","store/actions.ts","components/ErrorSnackBar/Alert/Alert.tsx","components/ErrorSnackBar/ErrorSnackBar.tsx","utils/getUserRewards.ts","firebase/firebase.ts","helpers/helpers.ts","common/button/Button.styles.ts","common/button/Button.tsx","common/textField/TextField.tsx","components/ModalForm/ErrorItem/ErrorItem.styles.ts","components/ModalForm/ErrorItem/ErrorItem.tsx","components/ModalForm/InitialFormValues.ts","components/ModalForm/ModalForm.styles.ts","components/ModalForm/RewardsDialog.tsx","validation/rewardsValidation.ts","components/TabPanel/TabPanel.styles.ts","components/TabPanel/TabPanel.tsx","themeConfig/colors.ts","components/FeelAndRewards/addRewardsIcon/AddRewardsIcon.styles.ts","components/FeelAndRewards/addRewardsIcon/AddRewardsIcon.tsx","components/FeelAndRewards/FeedItem/FeelItem.styles.ts","components/FeelAndRewards/FeedItem/FeedItem.tsx","components/FeelAndRewards/FeelAndRewards.styles.ts","components/FeelAndRewards/Tabs/StyledTabs/Tabs.styles.ts","components/FeelAndRewards/Tabs/StyledTabs/Tab.tsx","components/FeelAndRewards/Tabs/StyledTabs/Tabs.tsx","components/FeelAndRewards/FeelAndRewards.tsx","components/FeelAndRewards/FeelAndRewardsContainer.tsx","store/thunks.ts","utils/getUsersNamesUtils.ts","components/HeaderBar/HeaderBar.styles.ts","components/HeaderBar/HeaderBar.tsx","components/Login/Login.styles.ts","components/Login/Login.tsx","components/Layout/Layout.styles.ts","components/Layout/Layout.tsx","components/UserInfo/UserInfo.styles.ts","components/UserInfo/UserInfo.tsx","App.tsx","reportWebVitals.ts","store/state.ts","store/store.ts","store/authReducer.ts","store/appReducer.ts","themeConfig/typography.ts","themeConfig/ThemeProvider.tsx","themeConfig/breakpoints.ts","index.tsx"],"names":["AppActionType","AuthActionType","resetError","type","RESET_ERROR","logIn","LOGIN","userAuthenticated","USER_AUTHENTICATED","setUser","name","email","imageUrl","id","give","myRewards","SET_USER","payload","getRewards","rewards","GET_REWARDS","Alert","React","forwardRef","props","ref","elevation","variant","ErrorSnackBar","errors","useSelector","state","app","dispatch","useDispatch","Snackbar","data-testid","open","autoHideDuration","anchorOrigin","horizontal","vertical","onClose","event","reason","severity","getUserRewards","displayName","myReward","forEach","reward","from","amount","to","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","provider","GoogleAuthProvider","setCustomParameters","prompt","useFirebase","currentName","user","getError","useCallback","error","SET_ERROR","setError","signIn","a","signInWithPopup","result","photoURL","uid","getDoc","doc","userSnap","exists","data","setDoc","signOut","firebaseSignOut","LOGOUT","DELETE_EMPLOYEE","console","info","isAuth","onAuthStateChanged","getDocs","collection","docs","map","e","fromUserIcon","fromUser","q","query","where","querySnapshot","fromUserData","a11yProps","index","useStyles","makeStyles","theme","root","padding","spacing","borderRadius","fontWeight","lineHeight","textTransform","textDecoration","Button","className","children","onClick","classes","color","clsx","TextField","label","placeholder","onChange","value","fullWidth","marginTop","ErrorItem","initialFormValues","toEmployee","why","textFieldNames","dialog","minWidth","backgroundColor","palette","primary","light","backgroundImage","breakpoints","down","dialogTitle","itemTitle","marginBottom","textAlign","buttonContainer","RewardsDialog","memo","validationString","handleClose","addRewardToEmployee","autocompleteData","useFormik","initialValues","validationSchema","Yup","shape","required","oneOf","min","onSubmit","values","Number","resetForm","touched","handleSubmit","setFieldValue","getFieldProps","getErrorMessage","fieldId","Boolean","Array","isArray","join","fieldName","String","split","fieldError","errorMessage","Dialog","paper","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Grid","Typography","Autocomplete","disablePortal","isOptionEqualToValue","option","renderInput","params","key","Date","getDate","options","InputProps","startAdornment","InputAdornment","position","multiline","rows","container","justifyContent","height","overflowY","margin","listStyle","width","boxShadow","webkitBoxShadow","main","outline","TabPanel","component","role","hidden","aria-labelledby","colors","right","top","zIndex","icon","border","AddRewardsIcon","handleOpen","Fab","size","fontSize","borderBottom","divider","itemsContainer","marginLeft","userContainer","dateMoment","cursor","avatar","FeedItem","date","useState","fromUrl","setFromUrl","fetchImageUrl","fromUserImageUrl","imgUrl","useEffect","direction","wrap","Avatar","alt","src","item","Tooltip","title","toString","placement","toNow","input","itemContainer","background","noMyRewards","display","alignItems","indicatorSpan","tab","typography","pxToRem","marginRight","text","transition","Tab","disableRipple","Tabs","TabIndicatorProps","FeelAndRewards","rewardsData","handleChange","aria-label","length","FeelAndRewardsContainer","setValue","setOpen","useMemo","filter","rewardItem","orderBy","onSnapshot","snapshot","includes","push","getUsersNamesUtils","getState","addDoc","createdAt","serverTimestamp","setReward","newValue","appBarContainer","default","appBarText","flexGrow","fontFamily","HeaderBar","AppBar","Toolbar","maxWidth","flexDirection","alignSelf","Login","Paper","Layout","isUserSignedIn","checkAuth","LinearProgress","userAmount","UserInfo","log","userName","xs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appInitialState","authInitialState","rootReducer","combineReducers","action","DELETE_USER","store","createStore","applyMiddleware","thunk","sm","md","lg","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","createTheme","xl","mobile","tablet","laptop","desktop","mode","dark","secondary","components","MuiOutlinedInput","styleOverrides","notchedOutline","borderColor","MuiButton","outlinedSecondary","MuiChip","outlined","MuiFormLabel","MuiInputBase","MuiInputAdornment","ThemeProvider","StyledEngineProvider","injectFirst","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAaYA,EAQAC,E,qEARAD,K,0BAAAA,E,sBAAAA,E,0BAAAA,E,kCAAAA,E,2BAAAA,M,cAQAC,K,cAAAA,E,gBAAAA,E,oBAAAA,E,0BAAAA,E,0BAAAA,E,wCAAAA,E,2BAAAA,M,KCjBL,IAQMC,EAAa,iBACvB,CACCC,KAAMH,EAAcI,cAYXC,EAAQ,iBAClB,CACCF,KAAMF,EAAeK,QAQZC,EAAoB,iBAC9B,CACCJ,KAAMF,EAAeO,qBAGZC,EAAU,SACrBC,EACAC,EACAC,EACAC,EACAC,EACAC,GANqB,MAQpB,CACCZ,KAAMF,EAAee,SACrBC,QAAS,CAAEP,OAAMC,QAAOC,WAAUC,KAAIC,OAAMC,eAQnCG,EAAa,SAACC,GAAD,MACvB,CACChB,KAAMH,EAAcoB,YACpBH,QAAS,CAAEE,a,wBC1DFE,EAAQC,IAAMC,YAAuC,SAAeC,EAAOC,GACtF,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,OCInDI,EAAgB,WAC3B,IAAMC,EAASC,aAAY,SAACC,GAAD,OAA6BA,EAAMC,IAAIH,UAC5DI,EAAWC,cASjB,OACE,cAACC,EAAA,EAAD,CACEC,cAAa,YACbC,OAAQR,EACRS,iBAAkB,IAClBC,aAAc,CAAEC,WAAY,SAAUC,SAAU,UAJlD,SAME,cAAC,EAAD,CAAOC,QAdS,SAACC,EAAwBC,GAC5B,cAAXA,GAGJX,EAAS/B,MAUsB2C,SAAS,UAAtC,SACGhB,O,wDC1BIiB,EAAiB,SAAC3B,EAA4B4B,GACzD,IAAIjC,EAAO,EACPkC,EAAW,EASf,OARA7B,EAAQ8B,SAAQ,SAACC,GACf,OAAIA,EAAOC,OAASJ,EACVjC,GAAQoC,EAAOE,OAErBF,EAAOG,KAAON,EACRC,GAAYE,EAAOE,YAD7B,KAIK,CAAEtC,OAAMkC,aC+BXhB,EAAMsB,YAVW,CACrBC,OAAQC,0CACRC,WAAYD,kCACZE,UAAWF,kBACXG,cAAeH,8BACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAIJO,EAAKC,YAAahC,GACzBiC,EAAOC,cACPC,EAAW,IAAIC,IACrBD,EAASE,oBAAoB,CAAEC,OAAQ,mBAEhC,I,YAAMC,EAAc,WACzB,IAAMtC,EAAWC,cACXsC,EAAc1C,aAAY,SAACC,GAAD,uBAA6BA,EAAMkC,KAAKQ,YAAxC,aAA6B,EAAiB/D,QAExEgE,EAAWC,uBACf,SAACC,GACC3C,EJpDkB,SAAC2C,GAAD,MACrB,CACCzE,KAAMH,EAAc6E,UACpB5D,QAAS,CACP2D,UIgDSE,CAASF,MAEpB,CAAC3C,IAuEH,MAAO,CACL8C,OArEU,uCAAG,8CAAAC,EAAA,+EAEUC,YAAgBhB,EAAME,GAFhC,cAELe,EAFK,SAGmCA,EAAOT,KAA7C1B,EAHG,EAGHA,YAAapC,EAHV,EAGUA,MAAOwE,EAHjB,EAGiBA,SAAUC,EAH3B,EAG2BA,IAH3B,SAIYC,YAAOC,YAAIvB,EAAI,OAAQqB,IAJnC,YAILG,EAJK,QAKEC,SALF,mBAMmBD,EAASE,OAA7B3E,EANC,EAMDA,KAAMC,EANL,EAMKA,UACdkB,EAASxB,EAAQsC,GAAe,GAAIpC,GAAS,GAAIwE,GAAY,GAAIC,EAAKtE,EAAMC,IAPnE,yCASH2E,YAAOJ,YAAIvB,EAAI,OAAQqB,GAAM,CAAEtE,KAAM,EAAGC,UAAW,IAThD,QAUTkB,EAASxB,EAAQsC,GAAe,GAAIpC,GAAS,GAAIwE,GAAY,GAAIC,EAAK,EAAG,IAVhE,QAYXnD,EAAS5B,KACT4B,EAAS1B,KAbE,kDAeX0B,EAAS1B,KACTmE,EAAS,eAhBE,0DAAH,qDAsEViB,QAlDW,uCAAG,sBAAAX,EAAA,+EAENY,YAAgB3B,GAFV,OAGZhC,EJpDH,CACC9B,KAAMF,EAAe4F,SIoDnB5D,GJpEgCvB,EIoED8D,EJnElC,CACCrE,KAAMH,EAAc8F,gBACpB7E,QAAS,CACPP,WIiEAqF,QAAQC,KAAK,cALD,gDAOZtB,EAAS,eAPG,kCJhEmB,IAAChE,IIgEpB,oBAAH,qDAmDXuF,OAxCa,WACb,IACEC,YAAmBjC,EAAD,uCAAO,WAAOQ,GAAP,iCAAAO,EAAA,0DACnBP,EADmB,wBAEb1B,EAAsC0B,EAAtC1B,YAAapC,EAAyB8D,EAAzB9D,MAAOwE,EAAkBV,EAAlBU,SAAUC,EAAQX,EAARW,IAFjB,SAGEe,YAAQC,YAAWrC,EAAI,YAHzB,uBAGbsC,EAHa,EAGbA,KACFlF,EAAUkF,EAAKC,KAAI,SAACpD,GACxB,OAAO,2BAAKA,EAAOuC,QAAnB,IAA2B5E,GAAIqC,EAAOrC,QALnB,EAOMiC,EAAe3B,EAAS4B,GAA3CjC,EAPa,EAObA,KAAMkC,EAPO,EAOPA,SAPO,UASf0C,YAAOJ,YAAIvB,EAAI,OAAQqB,GAAM,CAAErC,cAAapC,QAAOwE,aATpC,QAUrBlD,EAASxB,EAAQsC,GAAe,GAAIpC,GAAS,GAAIwE,GAAY,GAAIC,EAAKtE,EAAMkC,IAVvD,QAYvBf,EAAS5B,KAET4B,EAAS1B,KAdc,4CAAP,uDAgBlB,MAAOgG,GACPtE,EAAS1B,KACTwF,QAAQC,KAAK,aAqBfQ,aAjBgB,uCAAG,WAAOC,GAAP,mBAAAzB,EAAA,6DACb0B,EAAIC,YAAMP,YAAWrC,EAAI,QAAS6C,YAAM,cAAe,KAAMH,IADhD,SAESN,YAAQO,GAFjB,cAEbG,EAFa,OAGfjG,EAAW,GACfiG,EAAc5D,SAAQ,SAAC6D,GACjBlG,IAGJA,EAAWkG,EAAarB,OAAON,UAAY,OAR1B,kBAUZvE,GAVY,2CAAH,wD,SCpHPmG,EAAY,SAACC,GACxB,MAAO,CACLnG,GAAG,cAAD,OAAgBmG,GAClB,gBAAgB,mBAAhB,OAAoCA,K,uFCA3BC,EAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDC,KAAM,CACJC,QAASF,EAAMG,QAAQ,OAAQ,GAC/BC,aAAcJ,EAAMG,QAAQ,KAC5BE,WAAY,IACZC,WAAY,OACZC,cAAe,YACfC,eAAgB,YCLPC,GAAS,SAAC,GAAuE,IAAD,MAApEC,iBAAoE,MAAxD,GAAwD,MAApDC,gBAAoD,MAAzC,GAAyC,EAArCC,EAAqC,EAArCA,QAAYvG,EAAyB,kDACrFwG,EAAUf,IAEhB,OACE,cAAC,IAAD,yBACEtF,QAAQ,YACRsG,MAAM,UACNJ,UAAWK,aAAI,mBACZF,EAAQZ,MAAO,GADH,cAEZS,GAAY,GAFA,IAIfE,QAASA,GACLvG,GARN,aAUGsG,M,UCjBMK,GAAY,SAAC,GAMH,IAAD,IALpBC,aAKoB,MALZ,GAKY,MAJpBC,mBAIoB,MAJN,GAIM,EAHpBC,EAGoB,EAHpBA,SACAC,EAEoB,EAFpBA,MACG/G,EACiB,0DACpB,OACE,cAAC,KAAD,aACEgH,WAAS,EACTJ,MAAOA,EACPC,YAAaA,EACbE,MAAOA,EACP5G,QAAQ,WACR2G,SAAUA,GACN9G,K,UCfGyF,GAAYC,YAAW,CAClCE,KAAM,CAAEqB,UAAW,GAAIR,MAAO,YCCnBS,GAAsB,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAC9BE,EAAUf,KAChB,OAAO,qBAAKY,UAAWG,EAAQZ,KAAxB,SAA+BU,KCN3Ba,GAAoB,CAC/BC,WAAY,GACZxF,OAAQ,GACRyF,IAAK,IAGMC,GAAiB,CAC5BF,WAAY,aACZxF,OAAQ,SACRyF,IAAK,OCNM5B,GAAYC,aAAW,SAACC,GAAD,YAAmB,CACrDC,KAAM,CACJC,QAASF,EAAMG,QAAQ,MAEzByB,QAAM,GACJC,SAAU,QACVC,gBAAiB9B,EAAM+B,QAAQC,QAAQC,MACvCC,gBAAiB,OACjB9B,aAAcJ,EAAMG,QAAQ,IAJxB,cAKHH,EAAMmC,YAAYC,KAAK,MAAQ,CAC9BP,SAAU,SANR,yBAQM,SARN,GAUNQ,YAAa,CACXf,UAAWtB,EAAMG,QAAQ,IAE3BmC,UAAW,CACThB,UAAWtB,EAAMG,QAAQ,GACzBoC,aAAcvC,EAAMG,QAAQ,GAC5BqC,UAAW,UAEbC,gBAAiB,CACfnB,UAAWtB,EAAMG,QAAQ,QCZhBuC,GAAgBvI,IAAMwI,MACjC,YAAuF,ICbxDC,EDa5B1H,EAAmF,EAAnFA,KAAM2H,EAA6E,EAA7EA,YAAaC,EAAgE,EAAhEA,oBAAqBC,EAA2C,EAA3CA,iBACnClC,EAAUf,KADoE,EAGDkD,YAAU,CAC3FC,cAAezB,GACf0B,kBClB2BN,EDkBQG,ECjBhCI,OAAaC,MAAM,CACxB3B,WAAY0B,OAAaE,SAAS,cAAcC,MAAMV,GACtD3G,OAAQkH,OACLE,WACAE,IAAI,EAAG,kCACPF,SAAS,gBACZ3B,IAAKyB,OACFE,WACAE,IAAI,EAAG,0CACPF,SAAS,iBDSVG,SAAU,SAACC,GAAY,IACbhC,EAA4BgC,EAA5BhC,WAAYxF,EAAgBwH,EAAhBxH,OAAQyF,EAAQ+B,EAAR/B,IAC5BoB,EAAoBrB,EAAYiC,OAAOzH,GAASyF,GAEhDiC,IACAd,OARIc,EAH4E,EAG5EA,UAAWC,EAHiE,EAGjEA,QAASlJ,EAHwD,EAGxDA,OAAQmJ,EAHgD,EAGhDA,aAAcC,EAHkC,EAGlCA,cAAeC,EAHmB,EAGnBA,cAiB3DC,EAAkB,SAACC,GACvB,GAAIC,QAAQN,EAAQK,KAAaC,QAAQxJ,EAAOuJ,IAAW,CACzD,IAAMxG,EAAQ/C,EAAOuJ,GAErB,GAAIE,MAAMC,QAAQ3G,GAChB,OAAOA,EAAM4G,KAAK,MAEpB,IAAMC,EAAY3C,GAAesC,GANwB,EAOZM,OAAO7J,EAAOuJ,IAAUO,MAAMP,GAPlB,0BAOlDQ,OAPkD,MAOrC,GAPqC,SAOjCC,OAPiC,MAOlB,GAPkB,EASzD,OAAKA,EAIC,GAAN,OAAUJ,EAAV,YAAuBI,GAHdD,EAMX,MAAO,IAGT,OACE,cAACE,EAAA,EAAD,CACEzJ,KAAMA,EACNK,QA5Be,WACjBsH,IACAc,KA2BE9C,QAAS,CACP+D,MAAO/D,EAAQe,QAEjBiD,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,KATb,SAYE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY3K,QAAS,KAAMkG,UAAWG,EAAQwB,YAAaG,UAAW,SAAtE,yBAIA,uBAAM9B,UAAWG,EAAQZ,KAAMuD,SAAUK,EAAzC,UACE,cAACsB,EAAA,EAAD,CAAY3K,QAAS,YAAakG,UAAWG,EAAQyB,UAAWE,UAAW,SAA3E,4BAIA,cAAC4C,EAAA,EAAD,CACEC,eAAa,EACbhE,WAAW,EACXF,SAAU,SAAC3F,EAAO4F,GAChB0C,EAAc,aAAc1C,IAE9BkE,qBAAsB,SAACC,EAAQnE,GAAT,OAAmBmE,IAAWnE,GACpDoE,YAAa,SAACC,GAAD,OACX,wBAAC,GAAD,2BACMA,GADN,IAEEC,KAAK,IAAIC,MAAOC,UAChBlM,GAAG,aACHV,KAAK,OACLiI,MAAO,UACPI,WAAW,EACX5D,MAAOyG,QAAQF,EAAgB,gBAC3BD,EAAc,iBAGtB8B,QAAS9C,IAEVa,EAAQnC,YAAc/G,EAAO+G,YAC5B,cAAC,GAAD,qCAGF,cAAC0D,EAAA,EAAD,CAAY3K,QAAS,YAAakG,UAAWG,EAAQyB,UAArD,oBAGA,cAAC,GAAD,aACE5I,GAAG,SACHV,KAAK,SACLiI,MAAO,SACPI,WAAW,EACXyE,WAAY,CAAEC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,gBAC9BxI,MAAOyG,QAAQF,EAAgB,YAC3BD,EAAc,YAEnBH,EAAQ3H,QAAUvB,EAAOuB,QAAU,cAAC,GAAD,UAAYvB,EAAOuB,SAEvD,cAACkJ,EAAA,EAAD,CAAY3K,QAAS,YAAakG,UAAWG,EAAQyB,UAArD,8CAGA,cAAC,GAAD,aACE5I,GAAG,MACHwM,WAAS,EACTjF,MAAO,MACPkF,KAAM,EACN9E,WAAW,EACX5D,MAAOyG,QAAQF,EAAgB,SAC3BD,EAAc,SAEnBH,EAAQlC,KAAOhH,EAAOgH,KAAO,cAAC,GAAD,UAAYhH,EAAOgH,MAEjD,cAACwD,EAAA,EAAD,CAAMkB,WAAS,EAACC,eAAgB,SAAU3F,UAAWG,EAAQ4B,gBAA7D,SACE,cAAC,GAAD,CAAQzJ,KAAM,SAAd,iCEjID8G,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDC,KAAM,CACJC,QAAS,sBACToG,OAAQ,IACRC,UAAW,OACXC,OAAQ,EACRC,UAAW,OACX,uBAAwB,CACtBC,MAAO,GAET,6BAA8B,CAC5BC,UAAW,iCACXC,gBAAiB,kCAEnB,6BAA8B,CAC5B9E,gBAAiB9B,EAAM+B,QAAQC,QAAQ6E,KACvCzG,aAAcJ,EAAMG,QAAQ,GAC5B2G,QAAS,0BCbFC,GAAwC5M,IAAMwI,MAAK,YAAiC,IAA9BhC,EAA6B,EAA7BA,SAAUS,EAAmB,EAAnBA,MAAOvB,EAAY,EAAZA,MAC5EgB,EAAUf,KAEhB,OACE,cAACqF,EAAA,EAAD,CACEzE,UAAWG,EAAQZ,KACnB+G,UAAU,MACVC,KAAK,WACLC,OAAQ9F,IAAUvB,EAClBnG,GAAE,0BAAqBmG,GACvBsH,kBAAA,qBAA+BtH,GANjC,SAQGc,O,+BCnBMyG,GACC,UADDA,GAIJ,UAJIA,GAKC,UALDA,GAMD,UANCA,GAOG,UAPHA,GASC,UATDA,GAUD,UAVCA,GAeF,UAfEA,GAgBD,UAhBCA,GAsBA,UAtBAA,GAuBE,UAvBFA,GAwBI,UAxBJA,GAyBJ,UCpBItH,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDoG,UAAW,CACTH,SAAU,YAEZA,SAAS,aACPA,SAAU,WACVoB,MAAO,GACPC,IAAK,GACLC,OAAQ,KACPvH,EAAMmC,YAAYC,KAAK,MAAQ,CAC9BiF,MAAO,EACPC,KAAM,IAGVE,KAAM,CAAE1F,gBAAiBsF,GAAcK,OAAO,aAAD,OAAeL,SCXjDM,GAAiB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WACzB9G,EAAUf,KAEhB,OACE,qBAAKY,UAAWG,EAAQuF,UAAxB,SACE,qBAAK1F,UAAWG,EAAQoF,SAAUrF,QAAS+G,EAA3C,SACE,cAACC,GAAA,EAAD,CAAKC,KAAM,QAAShH,QAAS,CAAEZ,KAAMY,EAAQ2G,MAA7C,SACE,cAAC,KAAD,CAASvM,cAAa,YAAa6F,MAAO,UAAWgH,SAAU,iB,yCCZ5DhI,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDC,KAAM,CACJsC,aAAcvC,EAAMG,QAAQ,GAC5B4H,aAAa,aAAD,OAAe/H,EAAM+B,QAAQiG,UAE3CC,eAAgB,CACdC,WAAYlI,EAAMG,QAAQ,IAE5BgI,cAAe,CAAE5F,aAAcvC,EAAMG,QAAQ,IAC7CiI,WAAY,CACVC,OAAQ,WAEVC,OAAQ,CAAE5B,MAAO,GAAIJ,OAAQ,QCNlBiC,GAAoC,SAAC,GAAmC,IAAjCvM,EAAgC,EAAhCA,KAAME,EAA0B,EAA1BA,GAAIwF,EAAsB,EAAtBA,IAAK8G,EAAiB,EAAjBA,KAAMlL,EAAW,EAAXA,KACjEuD,EAAUf,KADkE,EAEpD2I,mBAAS,IAF2C,mBAE3EC,EAF2E,KAElEC,EAFkE,KAG1EtJ,EAAiBjC,IAAjBiC,aAEFuJ,EAAgBpL,sBAAW,sBAAC,4BAAAK,EAAA,sEACDwB,EAAarD,GADZ,OAC1B6M,EAD0B,OAEhCF,EAAWE,GAFqB,2CAG/B,CAAC7M,EAAMqD,IAEJyJ,EAAS9M,IAASsB,EAAK/D,KAAO+D,EAAK7D,SAAWiP,EAMpD,OAJAK,qBAAU,WACRH,MACC,CAACA,IAGF,eAAC1D,EAAA,EAAD,CACEkB,WAAS,EACT4C,UAAW,MACX3C,eAAgB,QAChB3F,UAAWG,EAAQZ,KACnBgJ,KAAM,SALR,UAOE,cAACC,GAAA,EAAD,CAAQC,IAAK7L,EAAK/D,KAAM6P,IAAKN,EAAkBjI,QAAS,CAAEZ,KAAMY,EAAQyH,UAExE,eAACpD,EAAA,EAAD,CAAMmE,MAAI,EAACjD,WAAS,EAAC4C,UAAW,SAAUtI,UAAWG,EAAQoH,eAA7D,UACE,eAAC/C,EAAA,EAAD,CAAMmE,MAAI,EAACjD,WAAS,EAAC4C,UAAW,SAAUtI,UAAWG,EAAQsH,cAA7D,UACE,eAAChD,EAAA,EAAD,CAAY3K,QAAS,QAArB,UACGwB,EADH,gBACsBE,KAGtB,cAACoN,GAAA,EAAD,CAASC,MAAOf,EAAKgB,WAAYC,UAAU,eAA3C,SACE,cAACtE,EAAA,EAAD,CAAY3K,QAAS,QAArB,SACE,cAAC,KAAD,CAAQkG,UAAWG,EAAQuH,WAAYsB,OAAK,EAA5C,SACGlB,WAKT,cAACrD,EAAA,EAAD,CAAY3K,QAAS,QAArB,SAA+BkH,WC9C1B5B,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDC,KAAM,CAAEqB,UAAW,IACnBqI,MAAO,CACLnH,UAAW,SACX1B,MAAO,OAET8I,cAAe,CACbxJ,aAAcJ,EAAMG,QAAQ,GAC5B2B,gBAAiB9B,EAAM+B,QAAQ8H,WAAWjF,OAE5CkF,YAAa,CACXC,QAAS,OACT1D,eAAgB,SAChB2D,WAAY,c,UCbHlK,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDiK,cAAe,CACbvD,MAAO,QAETwD,IAAI,aACF3J,cAAe,YACfF,WAAY,IACZyH,SAAU9H,EAAMmK,WAAWC,QAAQ,IACnCC,YAAarK,EAAMG,QAAQ,GAC3BW,MAAOd,EAAM+B,QAAQuI,KAAKtI,QAC1ByF,OAAO,aAAD,OAAezH,EAAM+B,QAAQC,QAAQ6E,MAC3CzG,aAAc,GACdF,QAASF,EAAMG,QAAQ,KAAM,KAC7BwG,UAAW,mEACXpE,aAAcvC,EAAMG,QAAQ,KAC5BuG,MAAO,QACP,iBAAkB,CAChB5E,gBAAiB9B,EAAM+B,QAAQC,QAAQ6E,KACvC/F,MAAOd,EAAM+B,QAAQC,QAAQC,MAC7BsI,WAAY,iBACZlC,OAAQ,UACRZ,OAAQ,QAEV,qBAAsB,CACpB3F,gBAAgB,GAAD,OAAK9B,EAAM+B,QAAQC,QAAQ6E,QAG3C7G,EAAMmC,YAAYC,KAAK,MAAQ,CAC9B0F,SAAU9H,EAAMmK,WAAWC,QAAQ,IACnC1D,MAAO,cCzBA8D,GAAM,SAAC,GAAkC,IAA7BnQ,EAA4B,oBAC7CwG,EAAUf,KAEhB,OAAO,cAAC,KAAD,aAAQY,UAAWG,EAAQqJ,IAAKO,eAAa,GAAKpQ,K,UCH9CqQ,GAAO,SAAC,GAAmC,IAA9BrQ,EAA6B,oBAC/CwG,EAAUf,KAEhB,OACE,cAAC,KAAD,2BACMzF,GADN,IAEEsQ,kBAAmB,CAAEhK,SAAU,sBAAMD,UAAWG,EAAQoJ,qBCCjDW,GAAoDzQ,IAAMwI,MACrE,YAWO,IAVLzH,EAUI,EAVJA,KACAkG,EASI,EATJA,MACAyJ,EAQI,EARJA,YACA/H,EAOI,EAPJA,oBACAlJ,EAMI,EANJA,UACAmJ,EAKI,EALJA,iBACAzF,EAII,EAJJA,KACAqK,EAGI,EAHJA,WACA9E,EAEI,EAFJA,YACAiI,EACI,EADJA,aAEMjK,EAAUf,KAEhB,OACE,sBAAKY,UAAWG,EAAQZ,KAAxB,UACE,cAAC,GAAD,CAAgB0H,WAAYA,IAC5B,eAAC,GAAD,CAAMvG,MAAOA,EAAOD,SAAU2J,EAAcC,aAAW,OAAvD,UACE,cAAC,GAAD,aAAK9J,MAAM,QAAWrB,EAAU,KAChC,cAAC,GAAD,aAAKqB,MAAM,cAAiBrB,EAAU,QAExC,uBACA,eAACsF,EAAA,EAAD,CAAMxE,UAAWG,EAAQ+I,cAAzB,UACE,cAAC7C,GAAD,CAAU3F,MAAOA,EAAOvB,MAAO,EAA/B,SACGgL,EAAY1L,KAAI,SAACb,EAAMuB,GACtB,OAAO,cAAC,GAAD,aAAkCvC,KAAMA,GAAUgB,GAAnCA,EAAKtC,KAAO6D,QAGtC,cAACkH,GAAD,CAAU3F,MAAOA,EAAOvB,MAAO,EAA/B,SACGjG,EAAUoR,OACTpR,EAAUuF,KAAI,SAACb,EAAMuB,GACnB,OAAO,cAAC,GAAD,aAAkCvC,KAAMA,GAAUgB,GAAnCA,EAAKtC,KAAO6D,MAGpC,cAACsF,EAAA,EAAD,CAAY3K,QAAS,KAAMkG,UAAWG,EAAQiJ,YAA9C,kCAON,cAACpH,GAAD,CACExH,KAAMA,EACN2H,YAAaA,EACbC,oBAAqBA,EACrBC,iBAAkBA,UClDfkI,GAA0B,WACrC,IAAMnQ,EAAWC,cAD0B,EAEjB0N,mBAAiB,GAFA,mBAEpCrH,EAFoC,KAE7B8J,EAF6B,OAGnBzC,oBAAkB,GAHC,mBAGpCvN,EAHoC,KAG9BiQ,EAH8B,KAIrC7N,EAAO3C,aAAY,SAACC,GAAD,OAA6BA,EAAMkC,KAAKQ,QACzDuN,EAAgBlQ,aAAY,SAACC,GAAD,OAA6BA,EAAMC,OAA/DgQ,YACFjR,EAAYwR,mBAChB,kBAAMP,EAAYQ,QAAO,SAACC,GAAD,OAAgBA,EAAWtP,QAAX,OAAoBsB,QAApB,IAAoBA,OAApB,EAAoBA,EAAM/D,WACnE,CAACsR,EAAD,OAAcvN,QAAd,IAAcA,OAAd,EAAcA,EAAM/D,OAGtBwP,qBAAU,WACRjO,ECHF,uCAAiB,WAAOA,GAAP,eAAA+C,EAAA,sEAEP0B,EAAIC,YAAMP,YAAWrC,EAAI,WAAY2O,YAAQ,YAAa,SAFnD,SAGPC,YAAWjM,GAAG,SAACkM,GACnB,IAAMzR,EAAUyR,EAASvM,KAAKC,KAAI,SAACpD,GACjC,OAAO,2BAAKA,EAAOuC,QAAnB,IAA2B5E,GAAIqC,EAAOrC,QAExCoB,EAASf,EAAWC,OAPT,sDAUb4E,QAAQC,KAAR,MAVa,wDAAjB,yDDIG,CAAC/D,IAEJ,IAAMiI,EAAmBqI,mBAAQ,WAC/B,OAAI9N,EExB0B,SAACuN,EAAgCvN,GACjE,IAAMyF,EAAkC,GA6BxC,OA3BA8H,EAAY1L,KAAI,SAACpD,GACf,GAAIgH,EAAiB2I,SAAS3P,EAAOC,OACnC,IAAK+G,EAAiB2I,SAAS3P,EAAOG,IAAK,CACzC,GAAIH,EAAOG,KAAOoB,EAAK/D,KACrB,OAEF,OAAOwJ,EAAiB4I,KAAK5P,EAAOG,UAIxC,GAAI6G,EAAiB2I,SAAS3P,EAAOG,KACnC,IAAK6G,EAAiB2I,SAAS3P,EAAOC,MAAO,CAC3C,GAAID,EAAOC,OAASsB,EAAK/D,KACvB,OAEF,OAAOwJ,EAAiB4I,KAAK5P,EAAOC,YAKpCD,EAAOC,OAASsB,EAAK/D,MACvBwJ,EAAiB4I,KAAK5P,EAAOC,MAE3BD,EAAOG,KAAOoB,EAAK/D,MACrBwJ,EAAiB4I,KAAK5P,EAAOG,OAG1B6G,EFLI6I,CAAmBf,EAAavN,GAGlC,KACN,CAACuN,EAAavN,IAIXuF,EAAc,kBAAMsI,GAAQ,IAE5BrI,EAAsBtF,uBAC1B,SAACtB,EAAYD,EAAgByF,GAC3B5G,EAAS/B,KACT+B,ECNJ,SAACoB,EAAYD,EAAgByF,EAAamB,GAA1C,8CACA,WACE/H,EACA+Q,GAFF,qBAAAhO,EAAA,sEAKUtE,EALV,UAKiBsS,IAAW/O,KAAKQ,YALjC,aAKiB,EAAsB/D,KAC7BiP,GAAO,IAAI7C,MAAO6D,WAN5B,SAOUsC,YAAO7M,YAAWrC,EAAI,WAAY,CACtCV,KACAD,SACAyF,MACA1F,KAAMzC,EACNiP,OACAuD,UAAWC,gBAbjB,cAeUzM,EAAIC,YAAMP,YAAWrC,EAAI,WAAY2O,YAAQ,cAfvD,SAgBUC,YAAWjM,GAAG,SAACkM,GACnBA,EAASvM,KAAKC,KAAI,SAACpD,GACjB,OAAO,2BAAKA,EAAOuC,QAAnB,IAA2B5E,GAAIqC,EAAOrC,WAlB9C,OAqBImJ,IArBJ,kDAuBIjE,QAAQC,KAAR,MAvBJ,0DADA,wDDMaoN,CAAU/P,EAAID,EAAQyF,EAAKmB,MAEtC,CAAC/H,IAOH,OAAKwC,EAKH,cAACsN,GAAD,CACExJ,MAAOA,EACPlG,KAAMA,EACNtB,UAAWA,EACXkJ,oBAAqBA,EACrBC,iBAAkBA,EAClBF,YAAaA,EACbgI,YAAaA,EACbvN,KAAMA,EACNwN,aAlBiB,SAACtP,EAAuB0Q,GAC3ChB,EAASgB,IAkBPvE,WA/Be,kBAAMwD,GAAQ,MAiBxB,yD,oBG/CErL,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDmM,gBAAiB,CACfrK,gBAAiB9B,EAAM+B,QAAQ8H,WAAWuC,SAE5CC,WAAY,CACVvL,MAAOd,EAAM+B,QAAQuI,KAAKtI,QAC1BsK,SAAU,EACV9J,UAAW,UACXnC,WAAY,OACZkM,WAAY,0BACZrE,WAAY,QCHHsE,GAAsB,WAAO,IAChChO,EAAYpB,IAAZoB,QACFqC,EAAUf,KACVhD,EAAOnC,aAAY,SAACC,GAAD,OAA6BA,EAAMkC,KAAKA,KAAKgC,UAEtE,OACE,cAAC2N,GAAA,EAAD,CAAQxG,SAAS,SAASpF,QAAS,CAAEZ,KAAMY,EAAQsL,iBAAnD,SACE,eAACO,GAAA,EAAD,WACE,cAACvH,EAAA,EAAD,CAAY3K,QAAS,KAAMkG,UAAWG,EAAQwL,WAA9C,8BAGCvP,EAAO,cAAC,GAAD,CAAQ8D,QAASpC,EAAjB,sBAA8C,W,oBClBjDsB,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDC,KAAM,CACJqG,OAAQ,QACRyD,QAAS,OACT1D,eAAgB,SAChB2D,WAAY,UAEdpF,MAAO,CACLmF,QAAS,OACTzD,OAAQ,QACRqG,SAAU,QACVC,cAAe,SACfvG,eAAgB,SAChBnG,QAASF,EAAMG,QAAQ,IAEzBmK,KAAM,CACJ/H,aAAc,GACdgK,WAAY,0BACZzE,SAAU,GACVtF,UAAW,UAEbC,gBAAiB,CAAEoK,UAAW,cChBnBC,GAAQ,WACnB,IAAMjM,EAAUf,KACRlC,EAAWR,IAAXQ,OAER,OACE,qBAAK8C,UAAWG,EAAQZ,KAAxB,SACE,eAAC8M,GAAA,EAAD,CAAOxS,UAAW,EAAGmG,UAAWG,EAAQ+D,MAAxC,UACE,cAACO,EAAA,EAAD,CAAY3K,QAAS,KAAMkG,UAAWG,EAAQyJ,KAA9C,yGAIA,cAAC,GAAD,CAAQ1J,QAAShD,EAAQ8C,UAAWG,EAAQ4B,gBAA5C,2BChBK3C,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDC,KAAK,aACH4M,UAAW,SACXrG,OAAQxG,EAAMG,QAAQ,EAAG,IACxBH,EAAMmC,YAAYC,KAAK,MAAQ,CAC9BoE,OAAQxG,EAAMG,QAAQ,EAAG,SCElB6M,GAAmB,SAAC,GAAkB,IAAhBrM,EAAe,EAAfA,SACjBsM,EAAmB7P,IAA3B0B,OACFA,EAASnE,aAAY,SAACC,GAAD,OAA6BA,EAAMkC,KAAKA,KAAKgC,UAClEoO,EAAYvS,aAAY,SAACC,GAAD,OAA6BA,EAAMkC,KAAKA,KAAKoQ,aACrErM,EAAUf,KAQhB,OANAiJ,qBAAU,WACJmE,GACFD,MAED,CAACC,EAAWD,IAEVC,GAAcpO,EAIfoO,EACK,cAACC,GAAA,EAAD,IAGF,cAACjI,EAAA,EAAD,CAAMxE,UAAWG,EAAQZ,KAAzB,SAAgCU,IAP9B,cAAC,GAAD,KCpBEb,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDoG,UAAW,CACT9E,UAAWtB,EAAMG,QAAQ,IAG3BmI,OAAQ,CAAE9B,OAAQxG,EAAMG,QAAQ,EAAG,IAAK,IAAK,KAAMuG,MAAO,GAAIJ,OAAQ,IAEtE8G,WAAY,CACVtM,MAAOd,EAAM+B,QAAQC,QAAQ6E,UCDpBwG,GAAqB,WAChC,IAAMxM,EAAUf,KACVxC,EAAO3C,aAAY,SAACC,GAAD,OAA6BA,EAAMkC,KAAKQ,QAC3DtD,EAAUW,aAAY,SAACC,GAAD,OAA6BA,EAAMC,IAAIgQ,eAC7D/P,EAAWC,cAMjB,OAJAgO,qBAAU,WACRnK,QAAQ0O,IAAI,kBAAmBtT,EAAQgR,QACvClQ,ET6CF,uCACA,WACEA,EACA+Q,GAFF,+BAAAhO,EAAA,sDAIQP,EAAOuO,IAAW/O,KAAKQ,KACvBtD,EAAU6R,IAAWhR,IAAIgQ,YAC3BvN,GAAQtD,EAAQgR,SACVtR,EAAwC4D,EAAxC5D,GAAU6T,EAA8BjQ,EAApC/D,KAAgBE,EAAoB6D,EAApB7D,SAAUD,EAAU8D,EAAV9D,MADZ,EAECmC,EAAe3B,EAASuT,GAA3C5T,EAFkB,EAElBA,KAAMkC,EAFY,EAEZA,SACdf,EAASxB,EAAQiU,EAAU/T,EAAOC,EAAUC,EAAIC,EAAMkC,IACtDf,EAASf,EAAWC,KAVxB,2CADA,2DS5CG,CAACc,EAAUd,EAAQgR,SACjB1N,EAKH,eAAC4H,EAAA,EAAD,CAAMkB,WAAS,EAACjG,QAAS,EAAGO,UAAWG,EAAQuF,UAAW4D,WAAY,SAAtE,UACE,eAAC9E,EAAA,EAAD,CAAMmE,MAAI,EAACmE,GAAI,EAAf,UACE,cAACtE,GAAA,EAAD,CAAQC,IAAK7L,EAAK/D,KAAMsH,QAAS,CAAEZ,KAAMY,EAAQyH,QAAUc,IAAK9L,EAAK7D,WACrE,cAAC0L,EAAA,EAAD,CAAY3K,QAAS,QAArB,SAA+B8C,EAAK/D,UAEtC,cAAC2L,EAAA,EAAD,CAAMmE,MAAI,EAACmE,GAAI,EAAGxD,WAAY,SAA9B,SACE,eAAC9E,EAAA,EAAD,CAAMkB,WAAS,EAACjG,QAAS,EAAzB,UACE,eAAC+E,EAAA,EAAD,CAAMmE,MAAI,EAAV,UACE,cAAClE,EAAA,EAAD,CAAY3K,QAAS,QAArB,wBACA,eAAC2K,EAAA,EAAD,CAAY3K,QAAS,KAAMkG,UAAWG,EAAQuM,WAA9C,cACI9P,EAAK1D,gBAGX,eAACsL,EAAA,EAAD,CAAMmE,MAAI,EAAV,UACE,cAAClE,EAAA,EAAD,CAAY3K,QAAS,QAArB,kBACA,eAAC2K,EAAA,EAAD,CAAY3K,QAAS,KAAMkG,UAAWG,EAAQuM,WAA9C,cACI9P,EAAK3D,mBApBV,cAAC,GAAD,KCEI8T,GAbI,WACjB,OACE,eAACvI,EAAA,EAAD,WACE,cAAC,GAAD,IACA,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,EAAD,QCJSwI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oBCPDQ,GAAuC,CAClDtD,YAAa,GACbnQ,OAAQ,MAGG0T,GAAyC,CACpDtR,KAAM,CACJgC,QAAQ,EACRoO,WAAW,GAEb5P,KAAM,MCNF+Q,GAAcC,aAAgB,CAClCxR,KCJyB,WAGC,IAF1BlC,EAEyB,uDAFKwT,GAC9BG,EACyB,uCACzB,OAAQA,EAAOvV,MACb,KAAKF,EAAeK,MAClB,OAAO,2BACFyB,GADL,IAEEkC,KAAM,CAAEgC,QAAQ,EAAMoO,WAAW,KAGrC,KAAKpU,EAAe4F,OAClB,OAAO,2BACF9D,GADL,IAEEkC,KAAK,2BACAlC,EAAMkC,MADP,IAEFgC,QAAQ,MAId,KAAKhG,EAAee,SAClB,OAAO,2BACFe,GADL,IAEE0C,KAAK,eACAiR,EAAOzU,WAIhB,KAAKhB,EAAe0V,YAClB,OAAO,2BACF5T,GADL,IAEE0C,KAAM,OAGV,KAAKxE,EAAeO,mBAClB,OAAO,2BACFuB,GADL,IAEEkC,KAAK,2BACAlC,EAAMkC,MADP,IAEFoQ,WAAW,MAKnB,OAAOtS,GDvCPC,IELwB,WAGC,IAFzBD,EAEwB,uDAFKuT,GAC7BI,EACwB,uCACxB,OAAQA,EAAOvV,MACb,KAAKH,EAAcoB,YACjB,OAAO,2BACFW,GADL,IAEEiQ,YAAa0D,EAAOzU,QAAQE,UAGhC,KAAKnB,EAAc6E,UACjB,OAAO,2BACF9C,GADL,IAEEF,OAAQ6T,EAAOzU,QAAQ2D,QAG3B,KAAK5E,EAAcI,YACjB,OAAO,2BACF2B,GADL,IAEEF,OAAQ,OAId,OAAOE,KFhBI6T,GAAQC,aAAYL,GAAaM,aAAgBC,O,8BGXxDC,GAAK,2BACLC,GAAK,2BACLC,GAAK,4BAEE5E,GAAa,CACxBoC,WAAY,wDACZyC,IAAE,GACAC,eAAgB,IAChBnH,SAAU,IAFV,cAGCiH,GAAK,CACJjH,SAAU,KAJZ,cAMCgH,GAAK,CACJhH,SAAU,KAPZ,cASC+G,GAAK,CACJ/G,SAAU,KAVZ,GAaFoH,IAAE,GACAD,eAAgB,GAChBnH,SAAU,IAFV,cAGCiH,GAAK,CACJjH,SAAU,KAJZ,cAMCgH,GAAK,CACJhH,SAAU,KAPZ,cASC+G,GAAK,CACJ/G,SAAU,KAVZ,GAaFqH,IAAE,GACArH,SAAU,GACVmH,cAAe,GAFf,cAGCF,GAAK,CACJjH,SAAU,KAJZ,cAMCgH,GAAK,CACJhH,SAAU,KAPZ,cASC+G,GAAK,CACJ/G,SAAU,KAVZ,GAaFsH,IAAE,GACAtH,SAAU,GACVmH,cAAe,KAFf,cAGCH,GAAK,CACJhH,SAAU,KAJZ,cAMC+G,GAAK,CACJ/G,SAAU,KAPZ,GAUFuH,IAAE,GACAvH,SAAU,GACVmH,cAAe,GAFf,cAGCH,GAAK,CACJhH,SAAU,KAJZ,cAMC+G,GAAK,CACJ/G,SAAU,KAPZ,GAUFwH,IAAE,GACAxH,SAAU,GACVmH,cAAe,KAFf,cAGCH,GAAK,CACJhH,SAAU,KAJZ,cAMC+G,GAAK,CACJ/G,SAAU,KAPZ,GAUFyH,UAAU,aACRzH,SAAU,GACVmH,cAAe,KACdH,GAAK,CACJhH,SAAU,KAGd0H,UAAU,aACR1H,SAAU,GACVmH,cAAe,IACdH,GAAK,CACJhH,SAAU,KAGd2H,MAAM,aACJ3H,SAAU,GACVmH,cAAe,IACdH,GAAK,CACJhH,SAAU,KAGd4H,MAAM,aACJ5H,SAAU,GACVmH,cAAe,KACdH,GAAK,CACJhH,SAAU,KAGd6H,OAAO,aACL7H,SAAU,GACVmH,cAAe,MACdH,GAAK,CACJhH,SAAU,KAGd8H,QAAQ,aACN9H,SAAU,GACVmH,cAAe,IACdH,GAAK,CACJhH,SAAU,KAGd+H,SAAS,aACP/H,SAAU,GACVmH,cAAe,KACdH,GAAK,CACJhH,SAAU,KCjHV9H,GAAQ8P,aAAY,CACxB3N,YCTyB,CACzBsB,OAAQ,CACN+J,GAAI,EACJqB,GAAI,IACJC,GAAI,IACJC,GAAI,KACJgB,GAAI,KACJC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,KACRC,QAAS,ODAXhG,cACApI,QAAS,CACPqO,KAAM,QACNpO,QAAS,CACPC,MAAOmF,GACPiJ,KAAMjJ,GACNP,KAAMO,IAERkJ,UAAW,CACTrO,MAAOmF,GACPiJ,KAAMjJ,GACNP,KAAMO,IAERkD,KAAM,CACJtI,QAASoF,IAEXyC,WAAY,CACVuC,QAAShF,GACTxC,MAAOwC,KAGXmJ,WAAY,CACVC,iBAAkB,CAChBC,eAAgB,CACdxQ,KAAM,CACJ4J,WAAYzC,IAGdsJ,eAAgB,CACdC,YAAavJ,MAKnBwJ,UAAW,CACTH,eAAgB,CACdI,kBAAmB,CACjBhH,WAAYzC,GACZK,OAAO,aAAD,OAAeL,IACrBtG,MAAOsG,GACP,UAAW,CACTyC,WAAYzC,GACZK,OAAO,aAAD,OAAeL,QAM7B0J,QAAS,CACPL,eAAgB,CACdM,SAAU,CACRlH,WAAYzC,GACZK,OAAO,aAAD,OAAeL,IACrBtG,MAAOsG,MAKb4J,aAAc,CACZP,eAAgB,CACdxQ,KAAM,CACJ,mCAAoC,CAClCa,MAAOsG,OAMf6J,aAAc,CACZR,eAAgB,CACdxQ,KAAM,CACJ,iBAAkB,CAChB4J,WAAYzC,IAEd,iDAAkD,CAChDuJ,YAAavJ,OAMrB8J,kBAAmB,CACjBT,eAAgB,CACdxQ,KAAM,CACJa,MAAOsG,SAOJ+J,GAAgB,SAAC,GAA6C,IAA3CxQ,EAA0C,EAA1CA,SAC9B,OACE,cAACyQ,GAAA,EAAD,CAAsBC,aAAW,EAAjC,SACE,cAAC,KAAD,CAAkBrR,MAAOA,GAAzB,SAAiCW,OE5FvC2Q,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/C,MAAOA,GAAjB,SACE,cAAC,GAAD,UACE,cAAC,GAAD,UAINgD,SAASC,eAAe,SAM1BhE,O","file":"static/js/main.d729731b.chunk.js","sourcesContent":["import {\r\n  deleteCurrentEmployee,\r\n  deleteUser,\r\n  getRewards,\r\n  logIn,\r\n  logOut,\r\n  resetError,\r\n  setError,\r\n  setUser,\r\n  updateUser,\r\n  userAuthenticated,\r\n} from './actions';\r\n\r\nexport enum AppActionType {\r\n  ADD_REWARDS = 'ADD_REWARDS',\r\n  SET_ERROR = 'SET_ERROR',\r\n  RESET_ERROR = 'RESET_ERROR',\r\n  DELETE_EMPLOYEE = 'DELETE_EMPLOYEE',\r\n  GET_REWARDS = 'GET_REWARDS',\r\n}\r\n\r\nexport enum AuthActionType {\r\n  LOGIN = 'LOGIN',\r\n  LOGOUT = 'LOGOUT',\r\n  SET_USER = 'SET_USER',\r\n  DELETE_USER = 'DELETE_USER',\r\n  UPDATE_USER = 'UPDATE_USER',\r\n  USER_AUTHENTICATED = 'USER_AUTHENTICATED',\r\n  CLEAR_STORE = 'CLEAR_STORE',\r\n}\r\n\r\nexport type RewardsDataType = {\r\n  from: string;\r\n  to: string;\r\n  why: string;\r\n  date: string;\r\n  id: string;\r\n  amount: number;\r\n};\r\n\r\ntype AuthType = {\r\n  isAuth: boolean;\r\n  checkAuth: boolean;\r\n};\r\n\r\nexport type UserType = {\r\n  name: string;\r\n  email: string;\r\n  imageUrl: string;\r\n  myRewards: number;\r\n  give: number;\r\n  id: string;\r\n};\r\n\r\nexport type AppInitialStateType = {\r\n  rewardsData: Array<RewardsDataType>;\r\n  errors: string | null;\r\n};\r\n\r\nexport type AuthInitialStateType = {\r\n  auth: AuthType;\r\n  user: UserType | null;\r\n};\r\n\r\nexport type ActionsTypes =\r\n  | ReturnType<typeof logIn>\r\n  | ReturnType<typeof logOut>\r\n  | ReturnType<typeof setUser>\r\n  | ReturnType<typeof deleteUser>\r\n  | ReturnType<typeof userAuthenticated>\r\n  | ReturnType<typeof setError>\r\n  | ReturnType<typeof resetError>\r\n  | ReturnType<typeof deleteCurrentEmployee>\r\n  | ReturnType<typeof getRewards>\r\n  | ReturnType<typeof updateUser>;\r\n","import { AppActionType, AuthActionType, RewardsDataType } from './types';\r\n\r\n// app action\r\n\r\nexport const setError = (error: string) =>\r\n  ({\r\n    type: AppActionType.SET_ERROR,\r\n    payload: {\r\n      error,\r\n    },\r\n  } as const);\r\n\r\nexport const resetError = () =>\r\n  ({\r\n    type: AppActionType.RESET_ERROR,\r\n  } as const);\r\n\r\nexport const deleteCurrentEmployee = (name: string) =>\r\n  ({\r\n    type: AppActionType.DELETE_EMPLOYEE,\r\n    payload: {\r\n      name,\r\n    },\r\n  } as const);\r\n\r\n// auth action\r\nexport const logIn = () =>\r\n  ({\r\n    type: AuthActionType.LOGIN,\r\n  } as const);\r\n\r\nexport const logOut = () =>\r\n  ({\r\n    type: AuthActionType.LOGOUT,\r\n  } as const);\r\n\r\nexport const userAuthenticated = () =>\r\n  ({\r\n    type: AuthActionType.USER_AUTHENTICATED,\r\n  } as const);\r\n\r\nexport const setUser = (\r\n  name: string,\r\n  email: string,\r\n  imageUrl: string,\r\n  id: string,\r\n  give: number,\r\n  myRewards: number,\r\n) =>\r\n  ({\r\n    type: AuthActionType.SET_USER,\r\n    payload: { name, email, imageUrl, id, give, myRewards },\r\n  } as const);\r\n\r\nexport const deleteUser = () =>\r\n  ({\r\n    type: AuthActionType.DELETE_USER,\r\n  } as const);\r\n\r\nexport const getRewards = (rewards: RewardsDataType[]) =>\r\n  ({\r\n    type: AppActionType.GET_REWARDS,\r\n    payload: { rewards },\r\n  } as const);\r\n\r\nexport const updateUser = (give: number, myRewards: number) =>\r\n  ({ type: AuthActionType.UPDATE_USER, payload: { give, myRewards } } as const);\r\n","import React from 'react';\r\n\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\n\r\nexport const Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n","import React, { SyntheticEvent } from 'react';\r\n\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { resetError } from '../../store/actions';\r\nimport { AppRootStateType } from '../../store/store';\r\nimport { Alert } from './Alert/Alert';\r\n\r\nexport const ErrorSnackBar = () => {\r\n  const errors = useSelector((state: AppRootStateType) => state.app.errors);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (event?: SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch(resetError());\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      data-testid={'snack-bar'}\r\n      open={!!errors}\r\n      autoHideDuration={6000}\r\n      anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\r\n    >\r\n      <Alert onClose={handleClose} severity=\"warning\">\r\n        {errors}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import { RewardsDataType } from '../store/types';\r\n\r\nexport const getUserRewards = (rewards: RewardsDataType[], displayName: string | null) => {\r\n  let give = 0;\r\n  let myReward = 0;\r\n  rewards.forEach((reward) => {\r\n    if (reward.from === displayName) {\r\n      return (give += reward.amount);\r\n    }\r\n    if (reward.to === displayName) {\r\n      return (myReward += reward.amount);\r\n    }\r\n  });\r\n  return { give, myReward };\r\n};\r\n","import { useCallback } from 'react';\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  onAuthStateChanged,\r\n  signInWithPopup,\r\n  signOut as firebaseSignOut,\r\n} from 'firebase/auth';\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  query,\r\n  setDoc,\r\n  where,\r\n} from 'firebase/firestore';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  deleteCurrentEmployee,\r\n  logIn,\r\n  logOut,\r\n  setError,\r\n  setUser,\r\n  userAuthenticated,\r\n} from '../store/actions';\r\nimport { AppRootStateType } from '../store/store';\r\nimport { RewardsDataType } from '../store/types';\r\nimport { getUserRewards } from '../utils/getUserRewards';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);\r\nconst auth = getAuth();\r\nconst provider = new GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\n\r\nexport const useFirebase = () => {\r\n  const dispatch = useDispatch();\r\n  const currentName = useSelector((state: AppRootStateType) => state.auth.user?.name);\r\n\r\n  const getError = useCallback(\r\n    (error: string) => {\r\n      dispatch(setError(error));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const signIn = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const { displayName, email, photoURL, uid } = result.user;\r\n      const userSnap = await getDoc(doc(db, 'user', uid));\r\n      if (userSnap.exists()) {\r\n        const { give, myRewards } = userSnap.data();\r\n        dispatch(setUser(displayName || '', email || '', photoURL || '', uid, give, myRewards));\r\n      } else {\r\n        await setDoc(doc(db, 'user', uid), { give: 0, myRewards: 0 });\r\n        dispatch(setUser(displayName || '', email || '', photoURL || '', uid, 0, 0));\r\n      }\r\n      dispatch(logIn());\r\n      dispatch(userAuthenticated());\r\n    } catch (err) {\r\n      dispatch(userAuthenticated());\r\n      getError('Login flied');\r\n    }\r\n  };\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      await firebaseSignOut(auth);\r\n      dispatch(logOut());\r\n      dispatch(deleteCurrentEmployee(currentName as string));\r\n      console.info('logged out');\r\n    } catch (e) {\r\n      getError('Login flied');\r\n    }\r\n  };\r\n\r\n  const isAuth = () => {\r\n    try {\r\n      onAuthStateChanged(auth, async (user) => {\r\n        if (user) {\r\n          const { displayName, email, photoURL, uid } = user;\r\n          const { docs } = await getDocs(collection(db, 'rewards'));\r\n          const rewards = docs.map((reward) => {\r\n            return { ...reward.data(), id: reward.id } as RewardsDataType;\r\n          });\r\n          const { give, myReward } = getUserRewards(rewards, displayName);\r\n\r\n          await setDoc(doc(db, 'user', uid), { displayName, email, photoURL });\r\n          dispatch(setUser(displayName || '', email || '', photoURL || '', uid, give, myReward));\r\n        }\r\n        dispatch(logIn());\r\n\r\n        dispatch(userAuthenticated());\r\n      });\r\n    } catch (e) {\r\n      dispatch(userAuthenticated());\r\n      console.info('no user');\r\n    }\r\n  };\r\n\r\n  const fromUserIcon = async (fromUser: string) => {\r\n    const q = query(collection(db, 'user'), where('displayName', '==', fromUser));\r\n    const querySnapshot = await getDocs(q);\r\n    let imageUrl = '';\r\n    querySnapshot.forEach((fromUserData) => {\r\n      if (imageUrl) {\r\n        return;\r\n      }\r\n      imageUrl = fromUserData.data().photoURL || '';\r\n    });\r\n    return imageUrl;\r\n  };\r\n\r\n  return {\r\n    signIn,\r\n    signOut,\r\n    isAuth,\r\n    fromUserIcon,\r\n  };\r\n};\r\n","export const a11yProps = (index: number) => {\r\n  return {\r\n    id: `action-tab-${index}`,\r\n    'aria-controls': `action-tabpanel-${index}`,\r\n  };\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing('13px', 4),\r\n    borderRadius: theme.spacing(2.5),\r\n    fontWeight: 500,\r\n    lineHeight: '14px',\r\n    textTransform: 'uppercase',\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n","import { Button as MuiButton, ButtonProps } from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nimport { useStyles } from './Button.styles';\r\n\r\nexport const Button = ({ className = '', children = '', onClick, ...props }: ButtonProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiButton\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={clsx({\r\n        [classes.root]: true,\r\n        [className]: true,\r\n      })}\r\n      onClick={onClick}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </MuiButton>\r\n  );\r\n};\r\n","import { TextField as MuiTextField, TextFieldProps } from '@mui/material';\r\n\r\nexport const TextField = ({\r\n  label = '',\r\n  placeholder = '',\r\n  onChange,\r\n  value,\r\n  ...props\r\n}: TextFieldProps) => {\r\n  return (\r\n    <MuiTextField\r\n      fullWidth\r\n      label={label as string}\r\n      placeholder={placeholder as string}\r\n      value={value}\r\n      variant=\"outlined\"\r\n      onChange={onChange}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  root: { marginTop: 10, color: 'tomato' },\r\n});\r\n","import React from 'react';\r\n\r\nimport { useStyles } from './ErrorItem.styles';\r\n\r\nexport const ErrorItem: React.FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return <div className={classes.root}>{children}</div>;\r\n};\r\n","export const initialFormValues = {\r\n  toEmployee: '',\r\n  amount: '',\r\n  why: '',\r\n};\r\n\r\nexport const textFieldNames = {\r\n  toEmployee: 'toEmployee',\r\n  amount: 'amount',\r\n  why: 'why',\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2.5),\r\n  },\r\n  dialog: {\r\n    minWidth: '430px',\r\n    backgroundColor: theme.palette.primary.light,\r\n    backgroundImage: 'none',\r\n    borderRadius: theme.spacing(1),\r\n    [theme.breakpoints.down('md')]: {\r\n      minWidth: '100%',\r\n    },\r\n    maxWidth: '500px',\r\n  },\r\n  dialogTitle: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  itemTitle: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n}));\r\n","import React from 'react';\r\n\r\nimport { Autocomplete, Backdrop, Dialog, Grid, InputAdornment } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Button } from '../../common/button/Button';\r\nimport { TextField } from '../../common/textField/TextField';\r\nimport { validationSchema } from '../../validation/rewardsValidation';\r\nimport { ErrorItem } from './ErrorItem/ErrorItem';\r\nimport { initialFormValues, textFieldNames } from './InitialFormValues';\r\nimport { useStyles } from './ModalForm.styles';\r\nimport { ModalFormPropsType } from './types';\r\n\r\nexport const RewardsDialog = React.memo(\r\n  ({ open, handleClose, addRewardToEmployee, autocompleteData }: ModalFormPropsType) => {\r\n    const classes = useStyles();\r\n\r\n    const { resetForm, touched, errors, handleSubmit, setFieldValue, getFieldProps } = useFormik({\r\n      initialValues: initialFormValues,\r\n      validationSchema: validationSchema(autocompleteData),\r\n      onSubmit: (values) => {\r\n        const { toEmployee, amount, why } = values;\r\n        addRewardToEmployee(toEmployee, Number(amount), why);\r\n\r\n        resetForm();\r\n        handleClose();\r\n      },\r\n    });\r\n\r\n    const closeModal = () => {\r\n      handleClose();\r\n      resetForm();\r\n    };\r\n\r\n    const getErrorMessage = (fieldId: keyof typeof initialFormValues) => {\r\n      if (Boolean(touched[fieldId]) && Boolean(errors[fieldId])) {\r\n        const error = errors[fieldId];\r\n\r\n        if (Array.isArray(error)) {\r\n          return error.join(', ');\r\n        }\r\n        const fieldName = textFieldNames[fieldId];\r\n        const [fieldError = '', errorMessage = ''] = String(errors[fieldId]).split(fieldId);\r\n\r\n        if (!errorMessage) {\r\n          return fieldError as string;\r\n        }\r\n\r\n        return `${fieldName} ${errorMessage}` as string;\r\n      }\r\n\r\n      return '';\r\n    };\r\n\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={closeModal}\r\n        classes={{\r\n          paper: classes.dialog,\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 1000,\r\n        }}\r\n      >\r\n        <Grid>\r\n          <Typography variant={'h5'} className={classes.dialogTitle} textAlign={'center'}>\r\n            User reward\r\n          </Typography>\r\n\r\n          <form className={classes.root} onSubmit={handleSubmit}>\r\n            <Typography variant={'subtitle1'} className={classes.itemTitle} textAlign={'center'}>\r\n              Whom to reward\r\n            </Typography>\r\n\r\n            <Autocomplete\r\n              disablePortal\r\n              fullWidth={true}\r\n              onChange={(event, value) => {\r\n                setFieldValue('toEmployee', value);\r\n              }}\r\n              isOptionEqualToValue={(option, value) => option === value}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  key={new Date().getDate()}\r\n                  id=\"toEmployee\"\r\n                  type=\"text\"\r\n                  label={'To user'}\r\n                  fullWidth={true}\r\n                  error={Boolean(getErrorMessage('toEmployee'))}\r\n                  {...getFieldProps('toEmployee')}\r\n                />\r\n              )}\r\n              options={autocompleteData}\r\n            />\r\n            {touched.toEmployee && errors.toEmployee && (\r\n              <ErrorItem>Enter correct employee</ErrorItem>\r\n            )}\r\n\r\n            <Typography variant={'subtitle1'} className={classes.itemTitle}>\r\n              Reward\r\n            </Typography>\r\n            <TextField\r\n              id=\"amount\"\r\n              type=\"number\"\r\n              label={'Reward'}\r\n              fullWidth={true}\r\n              InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\r\n              error={Boolean(getErrorMessage('amount'))}\r\n              {...getFieldProps('amount')}\r\n            />\r\n            {touched.amount && errors.amount && <ErrorItem>{errors.amount}</ErrorItem>}\r\n\r\n            <Typography variant={'subtitle1'} className={classes.itemTitle}>\r\n              Describe what you want to reward\r\n            </Typography>\r\n            <TextField\r\n              id=\"why\"\r\n              multiline\r\n              label={'Why'}\r\n              rows={4}\r\n              fullWidth={true}\r\n              error={Boolean(getErrorMessage('why'))}\r\n              {...getFieldProps('why')}\r\n            />\r\n            {touched.why && errors.why && <ErrorItem>{errors.why}</ErrorItem>}\r\n\r\n            <Grid container justifyContent={'center'} className={classes.buttonContainer}>\r\n              <Button type={'submit'}>Reward</Button>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Dialog>\r\n    );\r\n  },\r\n);\r\n","import * as Yup from 'yup';\r\n\r\nexport const validationSchema = (validationString: string[]) => {\r\n  return Yup.object().shape({\r\n    toEmployee: Yup.string().required('Enter name').oneOf(validationString),\r\n    amount: Yup.number()\r\n      .required()\r\n      .min(1, 'Minimum amount of currency 1 $')\r\n      .required('Enter amount'),\r\n    why: Yup.string()\r\n      .required()\r\n      .min(2, 'The minimum number of characters is 3!')\r\n      .required('Write text'),\r\n  });\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: '10px 40px 30px 30px',\r\n    height: 400,\r\n    overflowY: 'auto',\r\n    margin: 0,\r\n    listStyle: 'none',\r\n    '&::-webkit-scrollbar': {\r\n      width: 9,\r\n    },\r\n    '&::-webkit-scrollbar-track': {\r\n      boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n      webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      borderRadius: theme.spacing(2),\r\n      outline: '1px solid #911b91',\r\n    },\r\n  },\r\n}));\r\n","import React from 'react';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { useStyles } from './TabPanel.styles';\r\nimport { TabPanelPropsType } from './types';\r\n\r\nexport const TabPanel: React.FC<TabPanelPropsType> = React.memo(({ children, value, index }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography\r\n      className={classes.root}\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`action-tabpanel-${index}`}\r\n      aria-labelledby={`action-tab-${index}`}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n});\r\n","export const colors = {\r\n  primaryRed: '#E80050',\r\n\r\n  // monochrome scale\r\n  white: '#ffffff', // lightness 100%\r\n  whiteSmoke: '#F5F5F6', // lightness 96%\r\n  solitude: '#E1E5ED', // lightness 91%\r\n  platinumGray: '#E2E2E3', // lightness 89%\r\n  veryLightGrey: '#CECECE', // lightness 81%\r\n  silverGray: '#C6C7C8', // lightness 78%\r\n  echoBlue: '#ABB2C2', // lightness 76%\r\n  mistGray: '#97989A', // lightness 60%\r\n  stormGray: '#7B7B7E', // lightness 49%\r\n  shuttleGray: '#68696C', // lightness 42%\r\n  brightGray: '#5F6063', // lightness 38%\r\n  eastBay: '#50576B', // lightness 37%\r\n  darkGray: '#555659', // lightness 34%\r\n  darkerGray: '#4C4C50', // lightness 31%\r\n  paynesGray: '#434347', // lightness 27%\r\n  vulcan: '#393A3E', // lightness 23%\r\n  darkestGray: '#303135', // lightness 20%\r\n  lightBlack: '#26272B', // lightness 16%\r\n  paleBlack: '#1D1E22', // lightness 12%\r\n  almostBlack: '#14151a', // lightness 9%\r\n  fallbackBlack: '#121113', // lightness 6%\r\n  black: '#000000', // lightness 0%\r\n\r\n  green: '#32A64F',\r\n  pinkRed: '#F9444C',\r\n\r\n  // cardinal schema colors\r\n  schema: ['#0ccdf2', '#2e74e6', '#7c49f2', '#e03bf2'],\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport { colors } from '../../../themeConfig/colors';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  position: {\r\n    position: 'absolute',\r\n    right: 90,\r\n    top: 27,\r\n    zIndex: 999,\r\n    [theme.breakpoints.down('sm')]: {\r\n      right: 8,\r\n      top: -2,\r\n    },\r\n  },\r\n  icon: { backgroundColor: colors.white, border: `2px solid ${colors.primaryRed}` },\r\n}));\r\n","import React from 'react';\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Fab from '@mui/material/Fab';\r\n\r\nimport { useStyles } from './AddRewardsIcon.styles';\r\nimport { TAddRewardsIconProps } from './types';\r\n\r\nexport const AddRewardsIcon = ({ handleOpen }: TAddRewardsIconProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.position} onClick={handleOpen}>\r\n        <Fab size={'large'} classes={{ root: classes.icon }}>\r\n          <AddIcon data-testid={'modalIcon'} color={'inherit'} fontSize={'large'} />\r\n        </Fab>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(3),\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  itemsContainer: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  userContainer: { marginBottom: theme.spacing(2) },\r\n  dateMoment: {\r\n    cursor: 'pointer',\r\n  },\r\n  avatar: { width: 56, height: 56 },\r\n}));\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { Avatar, Grid, Tooltip, Typography } from '@mui/material';\r\nimport Moment from 'react-moment';\r\n\r\nimport { useFirebase } from '../../../firebase/firebase';\r\nimport { useStyles } from './FeelItem.styles';\r\nimport { DataPropsType } from './types';\r\n\r\nexport const FeedItem: React.FC<DataPropsType> = ({ from, to, why, date, user }) => {\r\n  const classes = useStyles();\r\n  const [fromUrl, setFromUrl] = useState('');\r\n  const { fromUserIcon } = useFirebase();\r\n\r\n  const fetchImageUrl = useCallback(async () => {\r\n    const fromUserImageUrl = await fromUserIcon(from);\r\n    setFromUrl(fromUserImageUrl);\r\n  }, [from, fromUserIcon]);\r\n\r\n  const imgUrl = from === user.name ? user.imageUrl : fromUrl;\r\n\r\n  useEffect(() => {\r\n    fetchImageUrl();\r\n  }, [fetchImageUrl]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction={'row'}\r\n      justifyContent={'start'}\r\n      className={classes.root}\r\n      wrap={'nowrap'}\r\n    >\r\n      <Avatar alt={user.name} src={imgUrl as string} classes={{ root: classes.avatar }} />\r\n\r\n      <Grid item container direction={'column'} className={classes.itemsContainer}>\r\n        <Grid item container direction={'column'} className={classes.userContainer}>\r\n          <Typography variant={'body1'}>\r\n            {from} rewarded by {to}\r\n          </Typography>\r\n\r\n          <Tooltip title={date.toString()} placement=\"bottom-start\">\r\n            <Typography variant={'body2'}>\r\n              <Moment className={classes.dateMoment} toNow>\r\n                {date}\r\n              </Moment>\r\n            </Typography>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Typography variant={'body1'}>{why}</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: { marginTop: 40 },\r\n  input: {\r\n    textAlign: 'center',\r\n    color: 'red',\r\n  },\r\n  itemContainer: {\r\n    borderRadius: theme.spacing(2),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  noMyRewards: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n","import { Theme } from '@mui/material/styles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  indicatorSpan: {\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    textTransform: 'uppercase',\r\n    fontWeight: 500,\r\n    fontSize: theme.typography.pxToRem(14),\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.primary,\r\n    border: `2px solid ${theme.palette.primary.main}`,\r\n    borderRadius: 30,\r\n    padding: theme.spacing(1.25, 2.5),\r\n    boxShadow: '0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0)',\r\n    marginBottom: theme.spacing(0.75),\r\n    width: '155px',\r\n    '&.Mui-selected': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.light,\r\n      transition: 'all 200ms ease',\r\n      cursor: 'pointer',\r\n      border: 'none',\r\n    },\r\n    '&.Mui-focusVisible': {\r\n      backgroundColor: `${theme.palette.primary.main}`,\r\n    },\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: theme.typography.pxToRem(12),\r\n      width: '120px',\r\n    },\r\n  },\r\n}));\r\n","import React from 'react';\r\n\r\nimport { Tab as MuiTab } from '@mui/material';\r\n\r\nimport { useStyles } from './Tabs.styles';\r\nimport { StyledTabProps } from './types';\r\n\r\nexport const Tab = ({ ...props }: StyledTabProps) => {\r\n  const classes = useStyles();\r\n\r\n  return <MuiTab className={classes.tab} disableRipple {...props} />;\r\n};\r\n","import React from 'react';\r\n\r\nimport { Tabs as MuiTabs } from '@mui/material';\r\n\r\nimport { useStyles } from './Tabs.styles';\r\nimport { StyledTabsProps } from './types';\r\n\r\nexport const Tabs = ({ ...props }: StyledTabsProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiTabs\r\n      {...props}\r\n      TabIndicatorProps={{ children: <span className={classes.indicatorSpan} /> }}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Grid, Typography } from '@mui/material';\r\n\r\nimport { a11yProps } from '../../helpers/helpers';\r\nimport { RewardsDialog } from '../ModalForm/RewardsDialog';\r\nimport { TabPanel } from '../TabPanel/TabPanel';\r\nimport { AddRewardsIcon } from './addRewardsIcon/AddRewardsIcon';\r\nimport { FeedItem } from './FeedItem/FeedItem';\r\nimport { useStyles } from './FeelAndRewards.styles';\r\nimport { Tab } from './Tabs/StyledTabs/Tab';\r\nimport { Tabs } from './Tabs/StyledTabs/Tabs';\r\nimport { FeelAndRewardsPropsType } from './types';\r\n\r\nexport const FeelAndRewards: React.FC<FeelAndRewardsPropsType> = React.memo(\r\n  ({\r\n    open,\r\n    value,\r\n    rewardsData,\r\n    addRewardToEmployee,\r\n    myRewards,\r\n    autocompleteData,\r\n    user,\r\n    handleOpen,\r\n    handleClose,\r\n    handleChange,\r\n  }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AddRewardsIcon handleOpen={handleOpen} />\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"feed\">\r\n          <Tab label=\"Feed\" {...a11yProps(0)} />\r\n          <Tab label=\"My Rewards\" {...a11yProps(1)} />\r\n        </Tabs>\r\n        <hr />\r\n        <Grid className={classes.itemContainer}>\r\n          <TabPanel value={value} index={0}>\r\n            {rewardsData.map((data, index) => {\r\n              return <FeedItem key={data.from + index} user={user} {...data} />;\r\n            })}\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            {myRewards.length ? (\r\n              myRewards.map((data, index) => {\r\n                return <FeedItem key={data.from + index} user={user} {...data} />;\r\n              })\r\n            ) : (\r\n              <Typography variant={'h5'} className={classes.noMyRewards}>\r\n                No rewards sent\r\n              </Typography>\r\n            )}\r\n          </TabPanel>\r\n        </Grid>\r\n\r\n        <RewardsDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          addRewardToEmployee={addRewardToEmployee}\r\n          autocompleteData={autocompleteData}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n);\r\n","import React, { SyntheticEvent, useCallback, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { resetError } from '../../store/actions';\r\nimport { AppRootStateType } from '../../store/store';\r\nimport { fetchRewards, setReward } from '../../store/thunks';\r\nimport { getUsersNamesUtils } from '../../utils/getUsersNamesUtils';\r\nimport { FeelAndRewards } from './FeelAndRewards';\r\n\r\nexport const FeelAndRewardsContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState<number>(0);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const user = useSelector((state: AppRootStateType) => state.auth.user);\r\n  const { rewardsData } = useSelector((state: AppRootStateType) => state.app);\r\n  const myRewards = useMemo(\r\n    () => rewardsData.filter((rewardItem) => rewardItem.from === user?.name),\r\n    [rewardsData, user?.name],\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchRewards());\r\n  }, [dispatch]);\r\n\r\n  const autocompleteData = useMemo(() => {\r\n    if (user) {\r\n      return getUsersNamesUtils(rewardsData, user);\r\n    }\r\n\r\n    return [];\r\n  }, [rewardsData, user]);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const addRewardToEmployee = useCallback(\r\n    (to: string, amount: number, why: string) => {\r\n      dispatch(resetError());\r\n      dispatch(setReward(to, amount, why, handleClose));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const handleChange = (event: SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  if (!user) {\r\n    return <div>Something went wrong!</div>;\r\n  }\r\n\r\n  return (\r\n    <FeelAndRewards\r\n      value={value}\r\n      open={open}\r\n      myRewards={myRewards}\r\n      addRewardToEmployee={addRewardToEmployee}\r\n      autocompleteData={autocompleteData}\r\n      handleClose={handleClose}\r\n      rewardsData={rewardsData}\r\n      user={user}\r\n      handleChange={handleChange}\r\n      handleOpen={handleOpen}\r\n    />\r\n  );\r\n};\r\n","import {\r\n  addDoc,\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  serverTimestamp,\r\n} from 'firebase/firestore';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\n\r\nimport { db } from '../firebase/firebase';\r\nimport { getUserRewards } from '../utils/getUserRewards';\r\nimport { getRewards, setUser } from './actions';\r\nimport { AppRootStateType } from './store';\r\nimport { ActionsTypes, RewardsDataType } from './types';\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsTypes>;\r\n\r\nexport const fetchRewards =\r\n  (): ThunkType => async (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsTypes>) => {\r\n    try {\r\n      const q = query(collection(db, 'rewards'), orderBy('createdAt', 'desc'));\r\n      await onSnapshot(q, (snapshot) => {\r\n        const rewards = snapshot.docs.map((reward) => {\r\n          return { ...reward.data(), id: reward.id } as RewardsDataType;\r\n        });\r\n        dispatch(getRewards(rewards));\r\n      });\r\n    } catch (err) {\r\n      console.info(err);\r\n    }\r\n  };\r\n\r\nexport const setReward =\r\n  (to: string, amount: number, why: string, handleClose: () => void) =>\r\n  async (\r\n    dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsTypes>,\r\n    getState: () => AppRootStateType,\r\n  ) => {\r\n    try {\r\n      const name = getState().auth.user?.name;\r\n      const date = new Date().toString();\r\n      await addDoc(collection(db, 'rewards'), {\r\n        to,\r\n        amount,\r\n        why,\r\n        from: name,\r\n        date,\r\n        createdAt: serverTimestamp(),\r\n      });\r\n      const q = query(collection(db, 'rewards'), orderBy('createdAt'));\r\n      await onSnapshot(q, (snapshot) => {\r\n        snapshot.docs.map((reward) => {\r\n          return { ...reward.data(), id: reward.id } as RewardsDataType;\r\n        });\r\n      });\r\n      handleClose();\r\n    } catch (e) {\r\n      console.info(e);\r\n    }\r\n  };\r\n\r\nexport const updateAmount =\r\n  () =>\r\n  async (\r\n    dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsTypes>,\r\n    getState: () => AppRootStateType,\r\n  ) => {\r\n    const user = getState().auth.user;\r\n    const rewards = getState().app.rewardsData;\r\n    if (user && rewards.length) {\r\n      const { id, name: userName, imageUrl, email } = user;\r\n      const { give, myReward } = getUserRewards(rewards, userName);\r\n      dispatch(setUser(userName, email, imageUrl, id, give, myReward));\r\n      dispatch(getRewards(rewards));\r\n    }\r\n  };\r\n","import { RewardsDataType, UserType } from '../store/types';\r\n\r\nexport const getUsersNamesUtils = (rewardsData: RewardsDataType[], user: UserType) => {\r\n  const autocompleteData: Array<string> = [];\r\n\r\n  rewardsData.map((reward) => {\r\n    if (autocompleteData.includes(reward.from)) {\r\n      if (!autocompleteData.includes(reward.to)) {\r\n        if (reward.to === user.name) {\r\n          return;\r\n        }\r\n        return autocompleteData.push(reward.to);\r\n      }\r\n      return;\r\n    }\r\n    if (autocompleteData.includes(reward.to)) {\r\n      if (!autocompleteData.includes(reward.from)) {\r\n        if (reward.from === user.name) {\r\n          return;\r\n        }\r\n        return autocompleteData.push(reward.from);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (reward.from !== user.name) {\r\n      autocompleteData.push(reward.from);\r\n    }\r\n    if (reward.to !== user.name) {\r\n      autocompleteData.push(reward.to);\r\n    }\r\n  });\r\n  return autocompleteData;\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  appBarContainer: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  appBarText: {\r\n    color: theme.palette.text.primary,\r\n    flexGrow: 1,\r\n    textAlign: 'justify',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Circular Std,sans-serif',\r\n    marginLeft: 20,\r\n  },\r\n}));\r\n","import React from 'react';\r\n\r\nimport { AppBar, Toolbar, Typography } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button } from '../../common/button/Button';\r\nimport { useFirebase } from '../../firebase/firebase';\r\nimport { AppRootStateType } from '../../store/store';\r\nimport { useStyles } from './HeaderBar.styles';\r\n\r\nexport const HeaderBar: React.FC = () => {\r\n  const { signOut } = useFirebase();\r\n  const classes = useStyles();\r\n  const auth = useSelector((state: AppRootStateType) => state.auth.auth.isAuth);\r\n\r\n  return (\r\n    <AppBar position=\"static\" classes={{ root: classes.appBarContainer }}>\r\n      <Toolbar>\r\n        <Typography variant={'h6'} className={classes.appBarText}>\r\n          Peer and Rewards\r\n        </Typography>\r\n        {auth ? <Button onClick={signOut}>Sign Out</Button> : null}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    height: '400px',\r\n    maxWidth: '500px',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(7),\r\n  },\r\n  text: {\r\n    marginBottom: 40,\r\n    fontFamily: 'Circular Std,sans-serif',\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: { alignSelf: 'center' },\r\n}));\r\n","import React from 'react';\r\n\r\nimport { Paper, Typography } from '@mui/material';\r\n\r\nimport { Button } from '../../common/button/Button';\r\nimport { useFirebase } from '../../firebase/firebase';\r\nimport { useStyles } from './Login.styles';\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const { signIn } = useFirebase();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <Typography variant={'h5'} className={classes.text}>\r\n          Welcome to the Peer and Reward application. To continue using the application please\r\n          login.\r\n        </Typography>\r\n        <Button onClick={signIn} className={classes.buttonContainer}>\r\n          Sign In\r\n        </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    alignSelf: 'center',\r\n    margin: theme.spacing(0, 5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: theme.spacing(0, 2),\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { Grid, LinearProgress } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { useFirebase } from '../../firebase/firebase';\r\nimport { AppRootStateType } from '../../store/store';\r\nimport { Login } from '../Login/Login';\r\nimport { useStyles } from './Layout.styles';\r\n\r\nexport const Layout: React.FC = ({ children }) => {\r\n  const { isAuth: isUserSignedIn } = useFirebase();\r\n  const isAuth = useSelector((state: AppRootStateType) => state.auth.auth.isAuth);\r\n  const checkAuth = useSelector((state: AppRootStateType) => state.auth.auth.checkAuth);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (checkAuth) {\r\n      isUserSignedIn();\r\n    }\r\n  }, [checkAuth, isUserSignedIn]);\r\n\r\n  if (!checkAuth && !isAuth) {\r\n    return <Login />;\r\n  }\r\n\r\n  if (checkAuth) {\r\n    return <LinearProgress />;\r\n  }\r\n\r\n  return <Grid className={classes.root}>{children}</Grid>;\r\n};\r\n","import { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n\r\n  avatar: { margin: theme.spacing(0, 2.5, 2.5, 2.5), width: 86, height: 86 },\r\n\r\n  userAmount: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { Avatar, Grid, Typography } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { AppRootStateType } from '../../store/store';\r\nimport { updateAmount } from '../../store/thunks';\r\nimport { Login } from '../Login/Login';\r\nimport { useStyles } from './UserInfo.styles';\r\n\r\nexport const UserInfo: React.FC = () => {\r\n  const classes = useStyles();\r\n  const user = useSelector((state: AppRootStateType) => state.auth.user);\r\n  const rewards = useSelector((state: AppRootStateType) => state.app.rewardsData);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(' rewards.length', rewards.length);\r\n    dispatch(updateAmount());\r\n  }, [dispatch, rewards.length]);\r\n  if (!user) {\r\n    return <Login />;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2} className={classes.container} alignItems={'center'}>\r\n      <Grid item xs={5}>\r\n        <Avatar alt={user.name} classes={{ root: classes.avatar }} src={user.imageUrl} />\r\n        <Typography variant={'body1'}>{user.name}</Typography>\r\n      </Grid>\r\n      <Grid item xs={6} alignItems={'center'}>\r\n        <Grid container spacing={4}>\r\n          <Grid item>\r\n            <Typography variant={'body1'}>My Rewards</Typography>\r\n            <Typography variant={'h5'} className={classes.userAmount}>\r\n              ${user.myRewards}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant={'body1'}>Give</Typography>\r\n            <Typography variant={'h5'} className={classes.userAmount}>\r\n              ${user.give}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Grid } from '@mui/material';\r\n\r\nimport { ErrorSnackBar } from './components/ErrorSnackBar/ErrorSnackBar';\r\nimport { FeelAndRewardsContainer } from './components/FeelAndRewards/FeelAndRewardsContainer';\r\nimport { HeaderBar } from './components/HeaderBar/HeaderBar';\r\nimport { Layout } from './components/Layout/Layout';\r\nimport { UserInfo } from './components/UserInfo/UserInfo';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Grid>\r\n      <HeaderBar />\r\n      <Layout>\r\n        <UserInfo />\r\n        <FeelAndRewardsContainer />\r\n      </Layout>\r\n      <ErrorSnackBar />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { AppInitialStateType, AuthInitialStateType } from './types';\r\n\r\nexport const appInitialState: AppInitialStateType = {\r\n  rewardsData: [],\r\n  errors: null,\r\n};\r\n\r\nexport const authInitialState: AuthInitialStateType = {\r\n  auth: {\r\n    isAuth: false,\r\n    checkAuth: true,\r\n  },\r\n  user: null,\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { appReducer } from './appReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  app: appReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n","import { authInitialState } from './state';\r\nimport { ActionsTypes, AuthActionType, AuthInitialStateType } from './types';\r\n\r\nexport const authReducer = (\r\n  state: AuthInitialStateType = authInitialState,\r\n  action: ActionsTypes,\r\n): AuthInitialStateType => {\r\n  switch (action.type) {\r\n    case AuthActionType.LOGIN: {\r\n      return {\r\n        ...state,\r\n        auth: { isAuth: true, checkAuth: false },\r\n      };\r\n    }\r\n    case AuthActionType.LOGOUT: {\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          ...state.auth,\r\n          isAuth: false,\r\n        },\r\n      };\r\n    }\r\n    case AuthActionType.SET_USER: {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    }\r\n    case AuthActionType.DELETE_USER: {\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    }\r\n    case AuthActionType.USER_AUTHENTICATED: {\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          ...state.auth,\r\n          checkAuth: false,\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","import { appInitialState } from './state';\r\nimport { ActionsTypes, AppActionType, AppInitialStateType } from './types';\r\n\r\nexport const appReducer = (\r\n  state: AppInitialStateType = appInitialState,\r\n  action: ActionsTypes,\r\n): AppInitialStateType => {\r\n  switch (action.type) {\r\n    case AppActionType.GET_REWARDS: {\r\n      return {\r\n        ...state,\r\n        rewardsData: action.payload.rewards,\r\n      };\r\n    }\r\n    case AppActionType.SET_ERROR: {\r\n      return {\r\n        ...state,\r\n        errors: action.payload.error,\r\n      };\r\n    }\r\n    case AppActionType.RESET_ERROR: {\r\n      return {\r\n        ...state,\r\n        errors: null,\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","const sm = '@media (max-width:600px)';\r\nconst md = '@media (max-width:960px)';\r\nconst lg = '@media (max-width:1280px)';\r\n\r\nexport const typography = {\r\n  fontFamily: \"'PlusJakartaSans', 'Helvetica', 'Arial', 'sans-serif'\",\r\n  h1: {\r\n    letterSpacing: -1.5,\r\n    fontSize: 96,\r\n    [lg]: {\r\n      fontSize: 86,\r\n    },\r\n    [md]: {\r\n      fontSize: 75,\r\n    },\r\n    [sm]: {\r\n      fontSize: 56,\r\n    },\r\n  },\r\n  h2: {\r\n    letterSpacing: -0.5,\r\n    fontSize: 64,\r\n    [lg]: {\r\n      fontSize: 53,\r\n    },\r\n    [md]: {\r\n      fontSize: 46,\r\n    },\r\n    [sm]: {\r\n      fontSize: 38,\r\n    },\r\n  },\r\n  h3: {\r\n    fontSize: 48,\r\n    letterSpacing: 0,\r\n    [lg]: {\r\n      fontSize: 44,\r\n    },\r\n    [md]: {\r\n      fontSize: 41,\r\n    },\r\n    [sm]: {\r\n      fontSize: 32,\r\n    },\r\n  },\r\n  h4: {\r\n    fontSize: 32,\r\n    letterSpacing: 0.25,\r\n    [md]: {\r\n      fontSize: 29,\r\n    },\r\n    [sm]: {\r\n      fontSize: 25,\r\n    },\r\n  },\r\n  h5: {\r\n    fontSize: 24,\r\n    letterSpacing: 0,\r\n    [md]: {\r\n      fontSize: 22,\r\n    },\r\n    [sm]: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n  h6: {\r\n    fontSize: 20,\r\n    letterSpacing: 0.15,\r\n    [md]: {\r\n      fontSize: 20,\r\n    },\r\n    [sm]: {\r\n      fontSize: 18,\r\n    },\r\n  },\r\n  subtitle1: {\r\n    fontSize: 16,\r\n    letterSpacing: 0.15,\r\n    [md]: {\r\n      fontSize: 14,\r\n    },\r\n  },\r\n  subtitle2: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.1,\r\n    [md]: {\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  body1: {\r\n    fontSize: 16,\r\n    letterSpacing: 0.5,\r\n    [md]: {\r\n      fontSize: 14,\r\n    },\r\n  },\r\n  body2: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    [md]: {\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  button: {\r\n    fontSize: 14,\r\n    letterSpacing: 1.25,\r\n    [md]: {\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  caption: {\r\n    fontSize: 12,\r\n    letterSpacing: 0.4,\r\n    [md]: {\r\n      fontSize: 10,\r\n    },\r\n  },\r\n  overline: {\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    [md]: {\r\n      fontSize: 8,\r\n    },\r\n  },\r\n};\r\n","import { createTheme } from '@mui/material/styles';\r\nimport { StyledEngineProvider } from '@mui/material/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@mui/system';\r\n\r\nimport { breakpoints } from './breakpoints';\r\nimport { colors } from './colors';\r\nimport { typography } from './typography';\r\n\r\nconst theme = createTheme({\r\n  breakpoints,\r\n  typography,\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      light: colors.white,\r\n      dark: colors.darkGray,\r\n      main: colors.primaryRed,\r\n    },\r\n    secondary: {\r\n      light: colors.white,\r\n      dark: colors.darkGray,\r\n      main: colors.platinumGray,\r\n    },\r\n    text: {\r\n      primary: colors.black,\r\n    },\r\n    background: {\r\n      default: colors.platinumGray,\r\n      paper: colors.whiteSmoke,\r\n    },\r\n  },\r\n  components: {\r\n    MuiOutlinedInput: {\r\n      styleOverrides: {\r\n        root: {\r\n          background: colors.whiteSmoke,\r\n        },\r\n\r\n        notchedOutline: {\r\n          borderColor: colors.silverGray,\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        outlinedSecondary: {\r\n          background: colors.whiteSmoke,\r\n          border: `1px solid ${colors.echoBlue}`,\r\n          color: colors.eastBay,\r\n          '&:hover': {\r\n            background: colors.solitude,\r\n            border: `1px solid ${colors.echoBlue}`,\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiChip: {\r\n      styleOverrides: {\r\n        outlined: {\r\n          background: colors.whiteSmoke,\r\n          border: `1px solid ${colors.echoBlue}`,\r\n          color: colors.almostBlack,\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiFormLabel: {\r\n      styleOverrides: {\r\n        root: {\r\n          '&.MuiInputLabel-root.Mui-focused': {\r\n            color: colors.fallbackBlack,\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiInputBase: {\r\n      styleOverrides: {\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            background: colors.white,\r\n          },\r\n          '&.MuiOutlinedInput-root.Mui-focused > fieldset': {\r\n            borderColor: colors.paleBlack,\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiInputAdornment: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: colors.silverGray,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const ThemeProvider = ({ children }: { children: JSX.Element }) => {\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n};\r\n","export const breakpoints = {\r\n  values: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 960,\r\n    lg: 1280,\r\n    xl: 1920,\r\n    mobile: 600,\r\n    tablet: 960,\r\n    laptop: 1793,\r\n    desktop: 1920,\r\n  },\r\n};\r\n","import './index.css';\r\n\r\nimport React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from './store/store';\r\nimport { ThemeProvider } from './themeConfig/ThemeProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider>\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}